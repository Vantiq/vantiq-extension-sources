
plugins {
    id("io.freefair.lombok") // version "6.3.0" // version "8.7.1"
    id 'java'
    id 'application'
    id 'idea'
    id 'eclipse'
}

group 'io.vantiq'
version 'unspecified'

java {
    sourceCompatibility = 1.8
}

repositories {
    mavenCentral()
}

startScripts{
    doLast{
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        // Add the log Config to the top of the classpath
        windowsScriptFile.text = windowsScriptFile.text.replace("CLASSPATH=", "CLASSPATH=%APP_HOME%\\logConfig;")
        unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/logConfig:')
    }
}

application {
    mainClassName = 'io.vantiq.extsrc.jdbcSource.JDBCMain'
    // Copies the logger setup into logConfig in the distribution
    applicationDistribution.from("src/main/resources") {
        include "log4j2.xml"
        into "logConfig"
    }
}

tasks.withType(Test).configureEach {
    if (System.env.JDBC_DRIVER_LOC == null) {
        logger.warn("Some tests may have been skipped. Environment variable 'JDBC_DRIVER_LOC' is not set. " +
            "Please set it to a location containing the appropriate JDBC Driver .jar file.")
    }
    if (rootProject.hasProperty("EntConJDBCUsername")) {
        systemProperty "EntConJDBCUsername", rootProject.findProperty("EntConJDBCUsername") ?: "empty"
    }
    if (rootProject.hasProperty("EntConJDBCPassword")) {
        systemProperty "EntConJDBCPassword", rootProject.findProperty("EntConJDBCPassword") ?: "empty"
    }
    if (rootProject.hasProperty("EntConJDBCURL")) {
        systemProperty "EntConJDBCURL", rootProject.findProperty("EntConJDBCURL") ?: "empty"
    }
    if (rootProject.hasProperty("EntConTestSourceName")) {
        systemProperty "EntConTestSourceName", rootProject.findProperty("EntConTestSourceName")
    }
    if (rootProject.hasProperty("EntConTestTypeName")) {
        systemProperty "EntConTestTypeName", rootProject.findProperty("EntConTestTypeName")
    }
    if (rootProject.hasProperty("TestAuthToken")) {
        systemProperty "TestAuthToken", rootProject.findProperty("TestAuthToken") ?: "empty"
    }
    if (rootProject.hasProperty("TestVantiqServer")) {
        systemProperty "TestVantiqServer", rootProject.findProperty("TestVantiqServer") ?: "empty"
    }
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:${guavaVersion}"

    implementation project(':extjsdk')

    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"

    //  Compiling relevant JDBC Driver .jar file
    if (System.env.JDBC_DRIVER_LOC != null) {
        runtimeOnly files("${System.env.JDBC_DRIVER_LOC}")
    }
    
    // Used in tests that check VANTIQ date format behavior
    testImplementation "io.vantiq:vantiq-sdk:${vantiqSDKVersion}"
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.1'
    testImplementation project(path:":extjsdk", configuration:"testArtifacts")
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    // Used to create a connection pool if asynchronous processing has been specified for publish/query handlers
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'
}