group 'io.vantiq'
version 'unspecified'

apply plugin: 'java'
apply plugin: 'application'

java {
    sourceCompatibility = 1.8
}

repositories {
    mavenCentral()
}

startScripts{
    doLast{
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        // Add the log Config to the top of the classpath
        windowsScriptFile.text = windowsScriptFile.text.replace("CLASSPATH=", "CLASSPATH=%APP_HOME%\\logConfig;")
        unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/logConfig:')
    }
}

application {
    mainClassName = 'io.vantiq.extsrc.jmsSource.JMSMain'

    // Copies the logger setup into logConfig in the distribution
    applicationDistribution.from("src/main/resources") {
        include "log4j2.xml"
        into "logConfig"
    }
}

def configProps = ["EntConJMSUsername", "EntConJMSPassword", "EntConJMSURL", "EntConJMSConnectionFactory", "EntConJMSInitialContext",
				"EntConJMSTopic", "EntConJMSQueue", "EntConTestSourceName", "EntConTestTypeName", "TestAuthToken", "TestVantiqServer"]

tasks.withType(Test).configureEach {
    if (System.env.JMS_DRIVER_LOC == null) {
        logger.warn("Some tests may have been skipped. Environment variable 'JMS_DRIVER_LOC' is not set. " +
            "Please set it to a location containing the appropriate JMS Driver .jar file.")
    }
    configProps.each { aConfigProp ->
        if (rootProject.hasProperty(aConfigProp)) {
            systemProperty aConfigProp, rootProject.findProperty(aConfigProp)
        }
    }
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:${guavaVersion}"

    implementation project(':extjsdk')

    implementation "org.slf4j:slf4j-api:1.7.25"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    
    // Used for for standard JMS utility
    implementation group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'

    if (System.env.JMS_DRIVER_LOC != null) {

        // Compiling relevant JMS Driver .jar file
        runtimeOnly files("${System.env.JMS_DRIVER_LOC}")
    }

    // Used for testing extension source in VANTIQ
    testImplementation "io.vantiq:vantiq-sdk:${vantiqSDKVersion}"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.1'
    testImplementation project(path:":extjsdk", configuration:"testArtifacts")
}