group 'io.vantiq'
version 'unspecified'

apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()

    // Used for checking VANTIQ date format behavior with VANTIQ SDK
    maven {
        url "https://dl.bintray.com/vantiq/maven"
    }
}

mainClassName = 'io.vantiq.extsrc.jmsSource.JMSMain'

startScripts{
    doLast{
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        // Add the log Config to the top of the classpath
        windowsScriptFile.text = windowsScriptFile.text.replace("CLASSPATH=", "CLASSPATH=%APP_HOME%\\logConfig;")
        unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/logConfig:')
    }
}

// Copies the logger setup into logConfig in the distribution
applicationDistribution.from("src/main/resources") {
    include "log4j2.xml"
    into "logConfig"
}

tasks.withType(Test) {
	if (System.env.JMS_DRIVER_LOC == null) {
    	logger.warn("Some tests may have been skipped. Environment variable 'JMS_DRIVER_LOC' is not set. " +
    			"Please set it to a location containing the appropriate JMS Driver .jar file.")
    }
    if (rootProject.hasProperty("EntConJMSUsername")) {
        systemProperty "EntConJMSUsername", rootProject.findProperty("EntConJMSUsername")
        logger.warn("This is the username: " + rootProject.findProperty("EntConJMSUsername"))
    }
    if (rootProject.hasProperty("EntConJMSPassword")) {
        systemProperty "EntConJMSPassword", rootProject.findProperty("EntConJMSPassword")
        logger.warn("This is the password: " + rootProject.findProperty("EntConJMSPassword"))
    }
    if (rootProject.hasProperty("EntConJMSURL")) {
        systemProperty "EntConJMSURL", rootProject.findProperty("EntConJMSURL")
        logger.warn("This is the url: " + rootProject.findProperty("EntConJMSURL"))
    }
    if (rootProject.hasProperty("EntConJMSConnectionFactory")) {
        systemProperty "EntConJMSConnectionFactory", rootProject.findProperty("EntConJMSConnectionFactory")
        logger.warn("This is the connection factory: " + rootProject.findProperty("EntConJMSConnectionFactory"))
    }
    if (rootProject.hasProperty("EntConJMSInitialContext")) {
        systemProperty "EntConJMSInitialContext", rootProject.findProperty("EntConJMSInitialContext")
        logger.warn("This is the initial context: " + rootProject.findProperty("EntConJMSInitialContext"))
    }
    if (rootProject.hasProperty("EntConJMSTopic")) {
        systemProperty "EntConJMSTopic", rootProject.findProperty("EntConJMSTopic")
        logger.warn("This is the topic: " + rootProject.findProperty("EntConJMSTopic"))
    }
    if (rootProject.hasProperty("EntConJMSQueue")) {
        systemProperty "EntConJMSQueue", rootProject.findProperty("EntConJMSQueue")
        logger.warn("This is the queue: " + rootProject.findProperty("EntConJMSQueue"))
    }
    if (rootProject.hasProperty("EntConTestSourceName")) {
        systemProperty "EntConTestSourceName", rootProject.findProperty("EntConTestSourceName")
    }
    if (rootProject.hasProperty("EntConTestTypeName")) {
        systemProperty "EntConTestTypeName", rootProject.findProperty("EntConTestTypeName")
    }
    if (rootProject.hasProperty("TestAuthToken")) {
        systemProperty "TestAuthToken", rootProject.findProperty("TestAuthToken")
    }
    if (rootProject.hasProperty("TestVantiqServer")) {
        systemProperty "TestVantiqServer", rootProject.findProperty("TestVantiqServer")
    }
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    compile project(':extjsdk')

    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.11.0"

    //  Compiling relevant JMS Driver .jar file
    compile files("${System.env.JMS_DRIVER_LOC}")
    testCompile files("${System.env.JMS_DRIVER_LOC}")

    // Used for checking VANTIQ date format behavior with VANTIQ SDK
    compile 'io.vantiq:vantiq-sdk:1.0.17'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile project(path:":extjsdk", configuration:"testArtifacts")
}
