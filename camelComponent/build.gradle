/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

ext {
    camelVersion='3.18.1'
    log4JVersion='2.17.2'
    extjsdkVersion='1.0'
    jacksonVersion = '2.9.3' // FIXME: check latest version & promote to parent build.
    gsonVersion = '2.9.1'
    commonsLang3Version = '3.12.0'
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.apache.camel:camel-core:${camelVersion}"
    implementation "org.apache.camel:camel-support:${camelVersion}"
    implementation "org.apache.camel:camel-jackson:${camelVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"

    implementation project(":extjsdk")
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"

    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4JVersion}"
    testImplementation "org.apache.camel:camel-test:${camelVersion}"
    testImplementation "io.vantiq:vantiq-sdk:${vantiqSDKVersion}"
    testImplementation project(path: ":extjsdk", configuration: 'testArtifacts')
}

group = 'io.vantiq.extsrc.camel'
version = '1.0-SNAPSHOT'
description = 'Camel Vantiq Component'
java.sourceCompatibility = 1.11
java.targetCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            pom {
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    if (rootProject.hasProperty("TestAuthToken")) {
        systemProperty "TestAuthToken", rootProject.findProperty("TestAuthToken") ?: "empty"
    }
    if (rootProject.hasProperty("TestVantiqServer")) {
        systemProperty "TestVantiqServer", rootProject.findProperty("TestVantiqServer") ?: "empty"
    }
    // Use the build dir as a base to get our various test artifacts.
    systemProperty "buildDir", "${buildDir}"
}

