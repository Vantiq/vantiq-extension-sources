/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id("io.freefair.lombok")   //version "6.3.0" // version "8.7.1"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

ext {
    log4JVersion='2.23.1'
    gsonVersion = '2.9.1'
    commonsLang3Version = '3.12.0'
}

configurations {
    testArtifacts
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.apache.camel:camel-core:${camelVersion}"
    implementation "org.apache.camel:camel-support:${camelVersion}"
    implementation "org.apache.camel:camel-jackson:${camelVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"

    implementation project(":extjsdk")
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:{jacksonVersion}"

    testImplementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4JVersion}"
    testImplementation "org.apache.camel:camel-test-junit5:${camelVersion}"
    testImplementation "io.vantiq:vantiq-sdk:${vantiqSDKVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"

    testImplementation project(path: ":extjsdk", configuration: 'testArtifacts')
}

group = 'io.vantiq.extsrc.camel'
version = '1.0-SNAPSHOT'
description = 'Camel Vantiq Component'
java.sourceCompatibility = 1.11
java.targetCompatibility = JavaVersion.VERSION_17

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    if (rootProject.hasProperty("TestAuthToken")) {
        systemProperty "TestAuthToken", rootProject.findProperty("TestAuthToken") ?: "empty"
    }
    if (rootProject.hasProperty("TestVantiqServer")) {
        systemProperty "TestVantiqServer", rootProject.findProperty("TestVantiqServer") ?: "empty"
    }
    // Use the build dir as a base to get our various test artifacts.
    systemProperty "buildDir", "${buildDir}"
}


task testJar (type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}

// This is not a connector so no connector image should be constructed or pushed.
buildImages.onlyIf { false }
buildConnectorImage.onlyIf { false }
pushImages.onlyIf { false }
pushConnectorImage.onlyIf { false }
