group 'io.vantiq'
version 'unspecified'

apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = 'io.vantiq.extsrc.objectRecognition.ObjectRecognitionMain'


startScripts{
    doLast{
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        // Add the log Config to the top of the classpath
        windowsScriptFile.text = windowsScriptFile.text.replace("CLASSPATH=", "CLASSPATH=%APP_HOME%\\logConfig;")
        unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/logConfig:')
    }
}

javadoc.exclude("edu/*")

applicationDistribution.from(".") {
    include "README.md"
    include "LICENSE/*"
    into ""
}

applicationDistribution.from("src/main/resources") {
    include "log4j2.xml"
    into "logConfig"
}


task addTestFiles {
    // sampleVideo.mov
    def sampleVideoUrl = new URL("https://www.dropbox.com/s/h5yd00qr8sfgdlt/sampleVideo.mov?dl=1")
    def sampleVideoFile = file('src/test/resources/sampleVideo.mov')
    if (!sampleVideoFile.exists()) {
        sampleVideoUrl.withInputStream{ i -> sampleVideoFile.withOutputStream{ it << i }}
    }
            
    // yolo.pb
    def yoloGraphUrl = new URL("https://www.dropbox.com/s/lhnygcd6o6275jb/yolo.pb?dl=1")
    def yoloGraphFile = file('src/test/resources/models/yolo.pb')
    if (!yoloGraphFile.exists()) {
        yoloGraphUrl.withInputStream{ i -> yoloGraphFile.withOutputStream{ it << i }}
    }
    
}

/*tasks.withType(Test) {
    systemProperty "java.library.path", "${System.env.OPENCV_LOC}"
}*/

processTestResources.dependsOn addTestFiles

dependencies {
    compile project(':extjsdk')
    
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.11.0"
    
    // Used by CameraRetriever and FileRetriever. Can be removed if both CameraRetriever and FileRetriever are removed
    // Expects that the environment variable OPENCV_LOC is set to the location containing the opencv jar,
    // and either the same locations contains the required .dll/.so or the .dll/.so is already on the 
    compile files("${System.env.OPENCV_LOC}/opencv-342.jar")

    compile "com.fasterxml.jackson.core:jackson-databind:2.9.3"
    
    // Used by YoloProcessor alone. These two dependencies and all files in the edu.* package may be removed if YoloProcessor
    // is removed
    compile "org.tensorflow:tensorflow:1.9.0"
    compile "org.apache.commons:commons-math3:3.6.1"

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile project(path:":extjsdk", configuration:"testArtifacts")
}

