group 'io.vantiq'
version 'unspecified'

apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = 'io.vantiq.extsrc.objectRecognition.ObjectRecognitionMain'


startScripts{
    doLast{
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        // Add the log Config to the top of the classpath
        windowsScriptFile.text = windowsScriptFile.text.replace("CLASSPATH=", "CLASSPATH=%APP_HOME%\\logConfig;")
        unixScriptFile.text = unixScriptFile.text.replace('CLASSPATH=', 'CLASSPATH=$APP_HOME/logConfig:')
    }
}

javadoc.exclude("edu/*")

task copyLogFiles(type: Copy) {
    from("src/main/resources") 
    include "log4j2.xml"
    into "src/dist/logConfig"
}

task copyDocumentationFiles(type: Copy, dependsOn:copyLogFiles) {
    from "."
    include "README.md"
    include "LICENSE/*"
    into "src/dist"
}

distZip.dependsOn copyDocumentationFiles
distTar.dependsOn copyDocumentationFiles


task addTestFiles {
    // sampleVideo.mov
    def sampleVideoUrl = new URL("https://ucaf800e2a9aa322374455c1f5fb.dl.dropboxusercontent.com/cd/0/get/AOiEXn07p" + 
            "FdnP1wXYMmgrkRDzNO9y_QS85L6WIZsEP-8VJSM07TJwtClBTglYKq_8e4oc9jcd8wiJADk2GiJ1j_32Qp4oBWNfAD6zNvRym7Grg2" + 
            "oA3nLgn9T1lsBm5lNOvvvl9XjCSl88i8z1P33BKnneRvskuJVlZwvx14aEgdP_hmoRDSrEszxEP_ir6cvMjQ/file?dl=1")
    def sampleVideoFile = file('src/test/resources/sampleVideo.mov')
    if (!sampleVideoFile.exists()) {
        sampleVideoUrl.withInputStream{ i -> sampleVideoFile.withOutputStream{ it << i }}
    }
            
    // yolo.pb
    def yoloGraphUrl = new URL("https://ucfb5440ce4e1c38c30745c3ff51.dl.dropboxusercontent.com/cd/0/get/AOi66O6jII1" + 
            "ZXNNalhr_TIds_ZEXxUuL-8O95DTzBq16pQH-4wNBr8eSgSDEr9G-cbBqxaVfHbi066zLoQzCHjSZKx6rYzf-mUOVlZbjGxT73Kq4p" + 
            "bfErbj-QGt9Ey5kWwbP-hp5LzSVF4wIAFIv9bKnZqOJLGfqZu3LNkphfWwAA585b7EJliKQLebD9aaD5Cg/file?dl=1")
    def yoloGraphFile = file('src/test/resources/models/yolo.pb')
    if (!yoloGraphFile.exists()) {
        yoloGraphUrl.withInputStream{ i -> yoloGraphFile.withOutputStream{ it << i }}
    }
    
}

processTestResources.dependsOn addTestFiles

dependencies {
    compile project(':extjsdk')
    
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.11.0"
    
    // Used by CameraRetriever and FileRetriever. Can be removed if both CameraRetriever and FileRetriever are removed
    compile "org.openpnp:opencv:3.4.2-0"
    
    compile "com.fasterxml.jackson.core:jackson-databind:2.9.3"
    
    // Used by YoloProcessor alone. These two dependencies and all files in the edu.* package may be removed if YoloProcessor
    // is removed
    compile "org.tensorflow:tensorflow:1.9.0"
    compile "org.apache.commons:commons-math3:3.6.1"

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    testCompile project(path:":extjsdk", configuration:"testArtifacts")
}

